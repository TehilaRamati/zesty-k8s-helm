apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "zesty-k8s.fullname" . }}"
  labels:
    app.kubernetes.io/instance: "{{ include "zesty-k8s.fullname" . }}"
    app.kubernetes.io/name: "{{ include "zesty-k8s.fullname" . }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: "{{ include "zesty-k8s.fullname" . }}"
      app.kubernetes.io/name: "{{ include "zesty-k8s.fullname" . }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "{{ include "zesty-k8s.fullname" . }}"
        app.kubernetes.io/name: "{{ include "zesty-k8s.fullname" . }}"
    spec:
      automountServiceAccountToken: true
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 10 }}
      {{- end }}
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: "{{ include "zesty-k8s.name" . }}"
          ports:
            - containerPort: 9000
              name: healthz
          readinessProbe:
            httpGet:
              path: /ready
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- with .Values.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
          {{- toYaml .Values.container.securityContext | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.persistence.mountPath }}
              name: {{ .Values.persistence.volumeName }}
          envFrom:
            - configMapRef:
                name: "{{ include "zesty-k8s.configmap" . }}"
          {{- if ne .Values.encryptedCredentials ""}}
          env:
            - name: ENCRYPTED_CREDENTIALS
              value: {{ .Values.encryptedCredentials | quote }}
            {{- if .Values.awsCluster }}
          envFrom:
            - secretRef:
                name: "aws-cluster-secret"
            {{- end }}
          {{- end }}
          {{- if eq .Values.encryptedCredentials "" }}
            - secretRef:
                name: {{ .Values.secret.name | quote }}
            {{- if .Values.awsCluster }}
            - secretRef:
                name: "aws-cluster-secret"
            {{- end }}
          {{- end }}
      priorityClassName: system-cluster-critical
      securityContext:
      {{- toYaml .Values.securityContext | nindent 8 }}
      serviceAccountName: "{{ include "zesty-k8s.saname" . }}"
      shareProcessNamespace: true
      volumes:
        - name: {{ .Values.persistence.volumeName }}
          persistentVolumeClaim:
            claimName: "{{ include "zesty-k8s.pvcname" . }}"
